{"ast":null,"code":"export const getFloatVal = string => {\n  let floatValue = string.match(/[+-]?\\d+(\\.\\d+)?/g)[0];\n  return null !== floatValue ? parseFloat(parseFloat(floatValue).toFixed(2)) : '';\n};\n/**\n * Add first product.\n *\n * @param {Object} product Product\n * @return {{totalProductsCount: number, totalProductsPrice: any, products: Array}}\n */\n\nexport const addFirstProduct = products => {\n  let productPrice = getFloatVal(products.salePrice);\n  let newCart = {\n    products: [],\n    totalProductsCount: 1,\n    totalProductsPrice: productPrice\n  };\n  const newProduct = createNewProduct(products, productPrice, 1);\n  newCart.products.push(newProduct);\n  localStorage.setItem('keymoji-cart', JSON.stringify(newCart));\n  return newCart;\n};\nexport const createNewProduct = (products, productPrice, qty) => {\n  return {\n    productId: products.productId,\n    image: products.image,\n    name: products.name,\n    price: productPrice,\n    qty,\n    totalPrice: parseFloat((productPrice * qty).toFixed(2))\n  };\n};\nexport const updateCart = (existingCart, product, qtyToBeAdded, newQty = false) => {\n  const updatedProducts = getUpdatedProducts(existingCart.products, product, qtyToBeAdded, newQty);\n\n  const addPrice = (total, item) => {\n    total.totalPrice += item.totalPrice;\n    total.qty += item.qty;\n    return total;\n  };\n\n  let total = updatedProducts.reduce(addPrice, {\n    totalPrice: 0,\n    qty: 0\n  });\n  const updatedCart = {\n    products: updatedProducts,\n    totalProductsCount: parseInt(total.qty),\n    totalProductsPrice: parseFloat(total.totalPrice)\n  };\n  localStorage.setItem('keymoji-cart', JSON.stringify(updatedCart));\n  return updatedCart;\n};\nexport const getUpdatedProducts = (existingProductsInCart, products, qtyToBeAdded, newQty = false) => {\n  const productsExistsIndex = isProductInCart(existingProductsInCart, products.productId);\n\n  if (-1 < productsExistsIndex) {\n    let updatedProducts = existingProductsInCart;\n    let updatedProduct = updatedProducts[productsExistsIndex];\n    updatedProduct.qty = newQty ? parseInt(newQty) : parseInt(updatedProduct.qty + qtyToBeAdded);\n    updatedProduct.totalPrice = parseFloat(updatedProduct.price * updatedProduct.qty).toFixed(2);\n    return updatedProducts;\n  } else {\n    let productPrice = getFloatVal(products.price);\n    const newProduct = createNewProduct(products, productPrice, qtyToBeAdded);\n    existingProductsInCart.push(newProduct);\n    return existingProductsInCart;\n  }\n};\nexport const isProductInCart = (existingProductsInCart, productId) => {\n  const returnItemThatExits = (item, index) => {\n    if (productId === DataTransferItem.productId) {\n      return item;\n    }\n  };\n\n  const newArray = existingProductsInCart.filter(returnItemThatExits);\n  return existingProductsInCart.indexOf(newArray[0]);\n};","map":{"version":3,"sources":["C:/Users/ajith/Desktop/keymoji/functions.js"],"names":["getFloatVal","string","floatValue","match","parseFloat","toFixed","addFirstProduct","products","productPrice","salePrice","newCart","totalProductsCount","totalProductsPrice","newProduct","createNewProduct","push","localStorage","setItem","JSON","stringify","qty","productId","image","name","price","totalPrice","updateCart","existingCart","product","qtyToBeAdded","newQty","updatedProducts","getUpdatedProducts","addPrice","total","item","reduce","updatedCart","parseInt","existingProductsInCart","productsExistsIndex","isProductInCart","updatedProduct","returnItemThatExits","index","DataTransferItem","newArray","filter","indexOf"],"mappings":"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","sourcesContent":["export const getFloatVal = ( string ) => {\n\n\tlet floatValue = string.match( /[+-]?\\d+(\\.\\d+)?/g )[0];\n\treturn ( null !== floatValue ) ? parseFloat( parseFloat( floatValue ).toFixed( 2 ) ) : '';\n\n};\n\n/**\n * Add first product.\n *\n * @param {Object} product Product\n * @return {{totalProductsCount: number, totalProductsPrice: any, products: Array}}\n */\nexport const addFirstProduct = ( products ) => {\n\n\tlet productPrice = getFloatVal( products.salePrice );\n\n\tlet newCart = {\n\t\tproducts: [],\n\t\ttotalProductsCount: 1,\n\t\ttotalProductsPrice: productPrice\n\t};\n\n\tconst newProduct = createNewProduct( products, productPrice, 1 );\n\tnewCart.products.push( newProduct );\n\n\tlocalStorage.setItem( 'keymoji-cart', JSON.stringify( newCart ) );\n\n\treturn newCart;\n};\n\nexport const createNewProduct = ( products, productPrice, qty ) => {\n\n\treturn  {\n\t\tproductId: products.productId,\n\t\timage: products.image,\n\t\tname: products.name,\n\t\tprice: productPrice,\n\t\tqty,\n\t\ttotalPrice: parseFloat( ( productPrice * qty ).toFixed( 2 ) )\n\t};\n\n};\n\nexport const updateCart = ( existingCart, product, qtyToBeAdded, newQty = false  ) => {\n\n\tconst updatedProducts = getUpdatedProducts( existingCart.products , product, qtyToBeAdded, newQty );\n\tconst addPrice=(total,item)=>{\n\t\ttotal.totalPrice+=item.totalPrice;\n\t\ttotal.qty+=item.qty;\n\t\treturn total;\n\t}\n\tlet total= updatedProducts.reduce(addPrice,{totalPrice:0,qty:0});\n\tconst updatedCart = {\n\t\tproducts:updatedProducts,\n\t\ttotalProductsCount:parseInt(total.qty),\n\t\ttotalProductsPrice:parseFloat(total.totalPrice)\n\t};\n\tlocalStorage.setItem('keymoji-cart',JSON.stringify(updatedCart));\n\treturn updatedCart;\n};\n\nexport const getUpdatedProducts = (existingProductsInCart,products,qtyToBeAdded,newQty=false)=>{\n\tconst productsExistsIndex = isProductInCart(existingProductsInCart,products.productId);\n\tif(-1< productsExistsIndex){\n\t\tlet updatedProducts = existingProductsInCart;\n\t\tlet updatedProduct = updatedProducts[productsExistsIndex];\n\t\tupdatedProduct.qty = (newQty)?parseInt(newQty):parseInt(updatedProduct.qty+qtyToBeAdded);\n\t\tupdatedProduct.totalPrice = parseFloat(updatedProduct.price * updatedProduct.qty).toFixed(2);\n\t\treturn updatedProducts;\n\t}else{\n\t\tlet productPrice = getFloatVal(products.price);\n\t\tconst newProduct = createNewProduct(products,productPrice,qtyToBeAdded);\n\t\texistingProductsInCart.push(newProduct);\n\t\treturn existingProductsInCart;\n\t}\n};\nexport const isProductInCart = (existingProductsInCart,productId)=>{\n\tconst returnItemThatExits = (item,index)=>{\n\tif (productId === DataTransferItem.productId){\n\t\treturn item;\n\t}\n};\nconst newArray = existingProductsInCart.filter(returnItemThatExits);\nreturn existingProductsInCart.indexOf(newArray[0]);\n};\n"]},"metadata":{},"sourceType":"module"}