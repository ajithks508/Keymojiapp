{"ast":null,"code":"/**\n * Extracts and returns float value from a string.\n *\n * @param {string} string String\n * @return {any}\n */\nexport var getFloatVal = function getFloatVal(string) {\n  var floatValue = string.match(/[+-]?\\d+(\\.\\d+)?/g)[0];\n  console.warn('floatValue', floatValue);\n  return null !== floatValue ? parseFloat(parseFloat(floatValue).toFixed(2)) : '';\n};\nexport var addFirstProduct = function addFirstProduct(product) {\n  var productPrice = getFloatVal(product.price);\n  var newCart = {\n    products: [],\n    totalProductsCount: 1,\n    totalProductsPrice: productPrice\n  };\n  var newProduct = createNewProduct(product, productPrice, 1);\n  newCart.products.push(newProduct);\n  localStorage.setItem('keymoji-cart', JSON.stringify(newCart));\n  return newCart;\n};\nexport var createNewProduct = function createNewProduct(product, productPrice, qty) {\n  return {\n    productId: product.productId,\n    image: product.image,\n    name: product.name,\n    price: productPrice,\n    qty: qty,\n    totalPrice: parseFloat((productPrice * qty).toFixed(2))\n  };\n};","map":{"version":3,"sources":["C:/Users/ajith/Desktop/keymoji/functions.js"],"names":["getFloatVal","string","floatValue","match","console","warn","parseFloat","toFixed","addFirstProduct","product","productPrice","price","newCart","products","totalProductsCount","totalProductsPrice","newProduct","createNewProduct","push","localStorage","setItem","JSON","stringify","qty","productId","image","name","totalPrice"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAMA,WAAW,GAAG,SAAdA,WAAc,CAAEC,MAAF,EAAc;AAExC,MAAIC,UAAU,GAAGD,MAAM,CAACE,KAAP,CAAc,mBAAd,EAAoC,CAApC,CAAjB;AACAC,EAAAA,OAAO,CAACC,IAAR,CAAc,YAAd,EAA4BH,UAA5B;AACA,SAAS,SAASA,UAAX,GAA0BI,UAAU,CAAEA,UAAU,CAAEJ,UAAF,CAAV,CAAyBK,OAAzB,CAAkC,CAAlC,CAAF,CAApC,GAAgF,EAAvF;AAEA,CANM;AAOP,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAEC,OAAF,EAAe;AAE7C,MAAIC,YAAY,GAAGV,WAAW,CAAES,OAAO,CAACE,KAAV,CAA9B;AAEA,MAAIC,OAAO,GAAG;AACbC,IAAAA,QAAQ,EAAE,EADG;AAEbC,IAAAA,kBAAkB,EAAE,CAFP;AAGbC,IAAAA,kBAAkB,EAAEL;AAHP,GAAd;AAMA,MAAMM,UAAU,GAAGC,gBAAgB,CAAER,OAAF,EAAWC,YAAX,EAAyB,CAAzB,CAAnC;AACAE,EAAAA,OAAO,CAACC,QAAR,CAAiBK,IAAjB,CAAuBF,UAAvB;AAEAG,EAAAA,YAAY,CAACC,OAAb,CAAsB,cAAtB,EAAsCC,IAAI,CAACC,SAAL,CAAgBV,OAAhB,CAAtC;AAEA,SAAOA,OAAP;AACA,CAhBM;AAiBP,OAAO,IAAMK,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAER,OAAF,EAAWC,YAAX,EAAyBa,GAAzB,EAAkC;AAEjE,SAAQ;AACPC,IAAAA,SAAS,EAAEf,OAAO,CAACe,SADZ;AAEPC,IAAAA,KAAK,EAAEhB,OAAO,CAACgB,KAFR;AAGPC,IAAAA,IAAI,EAAEjB,OAAO,CAACiB,IAHP;AAIPf,IAAAA,KAAK,EAAED,YAJA;AAKPa,IAAAA,GAAG,EAAHA,GALO;AAMPI,IAAAA,UAAU,EAAErB,UAAU,CAAE,CAAEI,YAAY,GAAGa,GAAjB,EAAuBhB,OAAvB,CAAgC,CAAhC,CAAF;AANf,GAAR;AASA,CAXM","sourcesContent":["/**\n * Extracts and returns float value from a string.\n *\n * @param {string} string String\n * @return {any}\n */\nexport const getFloatVal = ( string ) => {\n\n\tlet floatValue = string.match( /[+-]?\\d+(\\.\\d+)?/g )[0];\n\tconsole.warn( 'floatValue', floatValue );\n\treturn ( null !== floatValue ) ? parseFloat( parseFloat( floatValue ).toFixed( 2 ) ) : '';\n\n};\nexport const addFirstProduct = ( product ) => {\n\n\tlet productPrice = getFloatVal( product.price );\n\n\tlet newCart = {\n\t\tproducts: [],\n\t\ttotalProductsCount: 1,\n\t\ttotalProductsPrice: productPrice\n\t};\n\n\tconst newProduct = createNewProduct( product, productPrice, 1 );\n\tnewCart.products.push( newProduct );\n\n\tlocalStorage.setItem( 'keymoji-cart', JSON.stringify( newCart ) );\n\n\treturn newCart;\n};\nexport const createNewProduct = ( product, productPrice, qty ) => {\n\n\treturn  {\n\t\tproductId: product.productId,\n\t\timage: product.image,\n\t\tname: product.name,\n\t\tprice: productPrice,\n\t\tqty,\n\t\ttotalPrice: parseFloat( ( productPrice * qty ).toFixed( 2 ) )\n\t};\n\n};\n\n"]},"metadata":{},"sourceType":"module"}