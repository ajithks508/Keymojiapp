{"ast":null,"code":"export var getFloatVal = function getFloatVal(string) {\n  var floatValue = string.match(/[+-]?\\d+(\\.\\d+)?/g)[0];\n  return null !== floatValue ? parseFloat(parseFloat(floatValue).toFixed(2)) : '';\n};\n/**\n * Add first product.\n *\n * @param {Object} product Product\n * @return {{totalProductsCount: number, totalProductsPrice: any, products: Array}}\n */\n\nexport var addFirstProduct = function addFirstProduct(products) {\n  var productPrice = getFloatVal(products.salePrice);\n  var newCart = {\n    products: [],\n    totalProductsCount: 1,\n    totalProductsPrice: productPrice\n  };\n  var newProduct = createNewProduct(products, productPrice, 1);\n  newCart.products.push(newProduct);\n  localStorage.setItem('keymoji-cart', JSON.stringify(newCart));\n  return newCart;\n};\nexport var createNewProduct = function createNewProduct(products, productPrice, qty) {\n  return {\n    productId: products.productId,\n    image: products.image,\n    name: products.name,\n    price: productPrice,\n    qty: qty,\n    totalPrice: parseFloat((productPrice * qty).toFixed(2))\n  };\n};\nexport var updateCart = function updateCart(existingCart, products, qtyToBeAdded) {\n  var newQty = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var updatedProducts = getUpdatedProducts(existingCart.products, products, qtyToBeAdded, newQty);\n};\nexport var getUpdatedProducts = function getUpdatedProducts(existingProductsInCart, products, qtyToBeAdded) {\n  var newQty = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var productsExistsIndex = isProductInCart(existingProductsInCart, products.productId);\n};","map":{"version":3,"sources":["C:/Users/ajith/Desktop/keymoji/functions.js"],"names":["getFloatVal","string","floatValue","match","parseFloat","toFixed","addFirstProduct","products","productPrice","salePrice","newCart","totalProductsCount","totalProductsPrice","newProduct","createNewProduct","push","localStorage","setItem","JSON","stringify","qty","productId","image","name","price","totalPrice","updateCart","existingCart","qtyToBeAdded","newQty","updatedProducts","getUpdatedProducts","existingProductsInCart","productsExistsIndex","isProductInCart"],"mappings":"AAAA,OAAO,IAAMA,WAAW,GAAG,SAAdA,WAAc,CAAEC,MAAF,EAAc;AAExC,MAAIC,UAAU,GAAGD,MAAM,CAACE,KAAP,CAAc,mBAAd,EAAoC,CAApC,CAAjB;AACA,SAAS,SAASD,UAAX,GAA0BE,UAAU,CAAEA,UAAU,CAAEF,UAAF,CAAV,CAAyBG,OAAzB,CAAkC,CAAlC,CAAF,CAApC,GAAgF,EAAvF;AAEA,CALM;AAOP;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAEC,QAAF,EAAgB;AAE9C,MAAIC,YAAY,GAAGR,WAAW,CAAEO,QAAQ,CAACE,SAAX,CAA9B;AAEA,MAAIC,OAAO,GAAG;AACbH,IAAAA,QAAQ,EAAE,EADG;AAEbI,IAAAA,kBAAkB,EAAE,CAFP;AAGbC,IAAAA,kBAAkB,EAAEJ;AAHP,GAAd;AAMA,MAAMK,UAAU,GAAGC,gBAAgB,CAAEP,QAAF,EAAYC,YAAZ,EAA0B,CAA1B,CAAnC;AACAE,EAAAA,OAAO,CAACH,QAAR,CAAiBQ,IAAjB,CAAuBF,UAAvB;AAEAG,EAAAA,YAAY,CAACC,OAAb,CAAsB,cAAtB,EAAsCC,IAAI,CAACC,SAAL,CAAgBT,OAAhB,CAAtC;AAEA,SAAOA,OAAP;AACA,CAhBM;AAkBP,OAAO,IAAMI,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAEP,QAAF,EAAYC,YAAZ,EAA0BY,GAA1B,EAAmC;AAElE,SAAQ;AACPC,IAAAA,SAAS,EAAEd,QAAQ,CAACc,SADb;AAEPC,IAAAA,KAAK,EAAEf,QAAQ,CAACe,KAFT;AAGPC,IAAAA,IAAI,EAAEhB,QAAQ,CAACgB,IAHR;AAIPC,IAAAA,KAAK,EAAEhB,YAJA;AAKPY,IAAAA,GAAG,EAAHA,GALO;AAMPK,IAAAA,UAAU,EAAErB,UAAU,CAAE,CAAEI,YAAY,GAAGY,GAAjB,EAAuBf,OAAvB,CAAgC,CAAhC,CAAF;AANf,GAAR;AASA,CAXM;AAaP,OAAO,IAAMqB,UAAU,GAAG,SAAbA,UAAa,CAAEC,YAAF,EAAgBpB,QAAhB,EAA0BqB,YAA1B,EAA6D;AAAA,MAArBC,MAAqB,uEAAZ,KAAY;AAEtF,MAAMC,eAAe,GAAGC,kBAAkB,CAAEJ,YAAY,CAACpB,QAAf,EAA0BA,QAA1B,EAAoCqB,YAApC,EAAkDC,MAAlD,CAA1C;AACA,CAHM;AAKP,OAAO,IAAME,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,sBAAD,EAAwBzB,QAAxB,EAAiCqB,YAAjC,EAA6D;AAAA,MAAfC,MAAe,uEAAR,KAAQ;AAC/F,MAAMI,mBAAmB,GAAGC,eAAe,CAACF,sBAAD,EAAwBzB,QAAQ,CAACc,SAAjC,CAA3C;AACC,CAFM","sourcesContent":["export const getFloatVal = ( string ) => {\n\n\tlet floatValue = string.match( /[+-]?\\d+(\\.\\d+)?/g )[0];\n\treturn ( null !== floatValue ) ? parseFloat( parseFloat( floatValue ).toFixed( 2 ) ) : '';\n\n};\n\n/**\n * Add first product.\n *\n * @param {Object} product Product\n * @return {{totalProductsCount: number, totalProductsPrice: any, products: Array}}\n */\nexport const addFirstProduct = ( products ) => {\n\n\tlet productPrice = getFloatVal( products.salePrice );\n\n\tlet newCart = {\n\t\tproducts: [],\n\t\ttotalProductsCount: 1,\n\t\ttotalProductsPrice: productPrice\n\t};\n\n\tconst newProduct = createNewProduct( products, productPrice, 1 );\n\tnewCart.products.push( newProduct );\n\n\tlocalStorage.setItem( 'keymoji-cart', JSON.stringify( newCart ) );\n\n\treturn newCart;\n};\n\nexport const createNewProduct = ( products, productPrice, qty ) => {\n\n\treturn  {\n\t\tproductId: products.productId,\n\t\timage: products.image,\n\t\tname: products.name,\n\t\tprice: productPrice,\n\t\tqty,\n\t\ttotalPrice: parseFloat( ( productPrice * qty ).toFixed( 2 ) )\n\t};\n\n};\n\nexport const updateCart = ( existingCart, products, qtyToBeAdded, newQty = false  ) => {\n\n\tconst updatedProducts = getUpdatedProducts( existingCart.products , products, qtyToBeAdded, newQty );\n};\n\nexport const getUpdatedProducts = (existingProductsInCart,products,qtyToBeAdded,newQty=false)=>{\nconst productsExistsIndex = isProductInCart(existingProductsInCart,products.productId);\n};\n"]},"metadata":{},"sourceType":"module"}