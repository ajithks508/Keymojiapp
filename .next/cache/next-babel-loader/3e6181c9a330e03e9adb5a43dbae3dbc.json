{"ast":null,"code":"export var getFloatVal = function getFloatVal(string) {\n  var floatValue = string.match(/[+-]?\\d+(\\.\\d+)?/g)[0];\n  return null !== floatValue ? parseFloat(parseFloat(floatValue).toFixed(2)) : '';\n};\n/**\n * Add first product.\n *\n * @param {Object} product Product\n * @return {{totalProductsCount: number, totalProductsPrice: any, products: Array}}\n */\n\nexport var addFirstProduct = function addFirstProduct(products) {\n  var productPrice = getFloatVal(products.salePrice);\n  var newCart = {\n    products: [],\n    totalProductsCount: 1,\n    totalProductsPrice: productPrice\n  };\n  var newProduct = createNewProduct(products, productPrice, 1);\n  newCart.products.push(newProduct);\n  localStorage.setItem('keymoji-cart', JSON.stringify(newCart));\n  return newCart;\n};\nexport var createNewProduct = function createNewProduct(products, productPrice, qty) {\n  return {\n    productId: products.productId,\n    image: products.image,\n    name: products.name,\n    price: productPrice,\n    qty: qty,\n    totalPrice: parseFloat((productPrice * qty).toFixed(2))\n  };\n};\nexport var updateCart = function updateCart(existingCart, products, qtyToBeAdded) {\n  var newQty = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var updatedProducts = getUpdatedProducts(existingCart.products, products, qtyToBeAdded, newQty);\n};\nexport var getUpdatedProducts = function getUpdatedProducts(existingProductsInCart, products, qtyToBeAdded) {\n  var newQty = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var productsExistsIndex = isProductInCart(existingProductsInCart, products.productId);\n\n  if (-1 < productsExistsIndex) {\n    var updatedProducts = existingProductsInCart;\n    var updatedProduct = updatedProducts[productsExistsIndex];\n    updatedProduct.qty = newQty ? parseInt(newQty) : parseInt(updatedProduct.qty + qtyToBeAdded);\n    updatedProduct.totalPrice = parseFloat(updatedProduct.price * updatedProduct.qty);\n  }\n};\nexport var isProductInCart = function isProductInCart(existingProductsInCart, productId) {\n  var returnItemThatExits = function returnItemThatExits(item, index) {\n    if (productId === DataTransferItem.productId) {\n      return item;\n    }\n  };\n\n  var newArray = existingProductsInCart.filter(returnItemThatExits);\n  return existingProductsInCart.indexOf(newArray[0]);\n};","map":{"version":3,"sources":["C:/Users/ajith/Desktop/keymoji/functions.js"],"names":["getFloatVal","string","floatValue","match","parseFloat","toFixed","addFirstProduct","products","productPrice","salePrice","newCart","totalProductsCount","totalProductsPrice","newProduct","createNewProduct","push","localStorage","setItem","JSON","stringify","qty","productId","image","name","price","totalPrice","updateCart","existingCart","qtyToBeAdded","newQty","updatedProducts","getUpdatedProducts","existingProductsInCart","productsExistsIndex","isProductInCart","updatedProduct","parseInt","returnItemThatExits","item","index","DataTransferItem","newArray","filter","indexOf"],"mappings":"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","sourcesContent":["export const getFloatVal = ( string ) => {\n\n\tlet floatValue = string.match( /[+-]?\\d+(\\.\\d+)?/g )[0];\n\treturn ( null !== floatValue ) ? parseFloat( parseFloat( floatValue ).toFixed( 2 ) ) : '';\n\n};\n\n/**\n * Add first product.\n *\n * @param {Object} product Product\n * @return {{totalProductsCount: number, totalProductsPrice: any, products: Array}}\n */\nexport const addFirstProduct = ( products ) => {\n\n\tlet productPrice = getFloatVal( products.salePrice );\n\n\tlet newCart = {\n\t\tproducts: [],\n\t\ttotalProductsCount: 1,\n\t\ttotalProductsPrice: productPrice\n\t};\n\n\tconst newProduct = createNewProduct( products, productPrice, 1 );\n\tnewCart.products.push( newProduct );\n\n\tlocalStorage.setItem( 'keymoji-cart', JSON.stringify( newCart ) );\n\n\treturn newCart;\n};\n\nexport const createNewProduct = ( products, productPrice, qty ) => {\n\n\treturn  {\n\t\tproductId: products.productId,\n\t\timage: products.image,\n\t\tname: products.name,\n\t\tprice: productPrice,\n\t\tqty,\n\t\ttotalPrice: parseFloat( ( productPrice * qty ).toFixed( 2 ) )\n\t};\n\n};\n\nexport const updateCart = ( existingCart, products, qtyToBeAdded, newQty = false  ) => {\n\n\tconst updatedProducts = getUpdatedProducts( existingCart.products , products, qtyToBeAdded, newQty );\n};\n\nexport const getUpdatedProducts = (existingProductsInCart,products,qtyToBeAdded,newQty=false)=>{\n\tconst productsExistsIndex = isProductInCart(existingProductsInCart,products.productId);\n\tif(-1< productsExistsIndex){\n\t\tlet updatedProducts = existingProductsInCart;\n\t\tlet updatedProduct = updatedProducts[productsExistsIndex];\n\t\tupdatedProduct.qty = (newQty)?parseInt(newQty):parseInt(updatedProduct.qty+qtyToBeAdded);\n\t\tupdatedProduct.totalPrice = parseFloat(updatedProduct.price * updatedProduct.qty)\n\t}\n};\nexport const isProductInCart = (existingProductsInCart,productId)=>{\n\tconst returnItemThatExits = (item,index)=>{\n\tif (productId === DataTransferItem.productId){\n\t\treturn item;\n\t}\n};\nconst newArray = existingProductsInCart.filter(returnItemThatExits);\nreturn existingProductsInCart.indexOf(newArray[0]);\n};\n"]},"metadata":{},"sourceType":"module"}