{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"query{\\n\\tproducts {\\n\\t\\tnodes {\\n\\t\\t  ... on SimpleProduct {\\n\\t\\t\\tid\\n\\t\\t\\tname\\n\\t\\t\\tsalePrice\\n\\t\\t\\tregularPrice\\n\\t\\t\\tproductCategories {\\n\\t\\t\\t  nodes {\\n\\t\\t\\t\\tname\\n\\t\\t\\t\\tid\\n\\t\\t\\t  }\\n\\t\\t\\t}\\n\\t\\t  }\\n\\t\\t}\\n\\t  }\\n}\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport Layout from \"../components/Layout\";\nimport Product from \"../components/Product\";\nimport client from \"../components/apolloClient\";\nimport gql from 'graphql-tag';\nvar PRODUCT_QUERY = gql(_templateObject());\n/**\r\n * index\r\n * \r\n * @param props\r\n * @return(*)\r\n * @constructor\r\n */\n\nvar Index = function Index(props) {\n  console.warn(props);\n  var products = props.products;\n  return /*#__PURE__*/_jsx(Layout, {\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: \"product-container\",\n      children: products.length ? products.map(function (product) {\n        return /*#__PURE__*/_jsx(Product, {\n          product: product\n        });\n      }) : ''\n    })\n  });\n};\n\n_c = Index;\nIndex.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var res;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return client.query({\n            query: PRODUCT_QUERY\n          });\n\n        case 2:\n          res = _context.sent;\n          return _context.abrupt(\"return\", {\n            products: result.products.nodes\n          });\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["C:/Users/ajith/Desktop/keymoji/pages/index.js"],"names":["Layout","Product","client","gql","PRODUCT_QUERY","Index","props","console","warn","products","length","map","product","getInitialProps","query","res","result","nodes"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,IAAMC,aAAa,GAAGD,GAAH,mBAAnB;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAME,KAAK,GAAG,SAARA,KAAQ,CAAEC,KAAF,EAAa;AAC1BC,EAAAA,OAAO,CAACC,IAAR,CAAcF,KAAd;AAD0B,MAElBG,QAFkB,GAELH,KAFK,CAElBG,QAFkB;AAG1B,sBACC,KAAC,MAAD;AAAA,2BACU;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,gBACNA,QAAQ,CAACC,MAAT,GACDD,QAAQ,CAACE,GAAT,CAAc,UAAAC,OAAO;AAAA,4BAAI,KAAC,OAAD;AAAS,UAAA,OAAO,EAAGA;AAAnB,UAAJ;AAAA,OAArB,CADC,GAEE;AAHI;AADV,IADD;AASC,CAZF;;KAAMP,K;AAaNA,KAAK,CAACQ,eAAN,yEAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACLX,MAAM,CAACY,KAAP,CAAa;AAACA,YAAAA,KAAK,EAACV;AAAP,WAAb,CADK;;AAAA;AACjBW,UAAAA,GADiB;AAAA,2CAEhB;AACNN,YAAAA,QAAQ,EAAEO,MAAM,CAACP,QAAP,CAAgBQ;AADpB,WAFgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;AAMA,eAAeZ,KAAf","sourcesContent":["import Layout from \"../components/Layout\";\r\nimport Product from \"../components/Product\";\r\nimport client from \"../components/apolloClient\";\r\nimport gql from 'graphql-tag';\r\nconst PRODUCT_QUERY = gql`query{\r\n\tproducts {\r\n\t\tnodes {\r\n\t\t  ... on SimpleProduct {\r\n\t\t\tid\r\n\t\t\tname\r\n\t\t\tsalePrice\r\n\t\t\tregularPrice\r\n\t\t\tproductCategories {\r\n\t\t\t  nodes {\r\n\t\t\t\tname\r\n\t\t\t\tid\r\n\t\t\t  }\r\n\t\t\t}\r\n\t\t  }\r\n\t\t}\r\n\t  }\r\n}`;\r\n\r\n/**\r\n * index\r\n * \r\n * @param props\r\n * @return(*)\r\n * @constructor\r\n */\r\n\r\nconst Index = ( props ) => {\r\n\tconsole.warn( props );\r\n\tconst { products } = props;\r\n\treturn( \r\n\t\t<Layout>\r\n            <div className=\"product-container\">\r\n\t\t\t\t{ products.length ? (\r\n\t\t\t\t\tproducts.map( product => <Product product={ product } />)\r\n\t\t\t\t) : ''}\r\n\t\t\t</div>\r\n        </Layout>\r\n\t\t)\r\n\t};\r\nIndex.getInitialProps = async () => {\r\n\tconst res = await client.query({query:PRODUCT_QUERY});\r\n\treturn {\r\n\t\tproducts: result.products.nodes\r\n\t}\r\n};\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}